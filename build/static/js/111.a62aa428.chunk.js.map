{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/Block.js","pages/components-overview/material-ui/buttons/TextButtons.js","pages/components-overview/material-ui/buttons/IconButtons.js","pages/components-overview/material-ui/buttons/ButtonGroups.js","pages/components-overview/material-ui/buttons/ToggleButtons.js","pages/components-overview/material-ui/buttons/OutlinedButtons.js","pages/components-overview/material-ui/buttons/ContainedButtons.js","pages/components-overview/material-ui/buttons/FloatingActionButton.js","pages/components-overview/material-ui/buttons/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","Label","title","component","color","Block","children","overflow","position","width","p","minHeight","style","justifyContent","flexWrap","mx","TextButtons","Grid","container","spacing","item","xs","md","Button","disabled","startIcon","endIcon","LoadingButton","loading","loadingIndicator","loadingPosition","size","IconButtons","IconButton","fontSize","m","ButtonGroups","ButtonGroup","orientation","ToggleButtons","useState","alignment","setAlignment","formats","setFormats","view","setView","selected","setSelected","handleAlignment","event","newAlignment","ToggleButtonGroup","value","exclusive","onChange","ToggleButton","newFormats","direction","nextView","OutlinedButtons","ContainedButtons","FloatingActionButton","Fab","BUTTONS","name","RootStyle","styled","Page","theme","paddingTop","paddingBottom","ButtonsComponent","setValue","Box","pt","pb","bgcolor","palette","mode","Container","maxWidth","PATH_PAGE","components","TabContext","TabList","newValue","tab","index","Tab","disableRipple","label","String","TabPanel"],"mappings":"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","file":"static/js/111.a62aa428.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n\nBlock.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Card sx={{ overflow: 'unset', position: 'unset', width: '100%' }}>\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 3,\n          minHeight: 180,\n          ...sx\n        }}\n      >\n        {children}\n      </Box>\n    </Card>\n  );\n}\n","// material\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { Grid, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function TextButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button color=\"inherit\">Default</Button>\n          <Button color=\"secondary\">Secondary</Button>\n          <Button>Primary</Button>\n          <Button disabled>Disabled</Button>\n          <Button>Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button color=\"inherit\">Default</Button>\n          <Button>Primary</Button>\n          <Button color=\"secondary\">Secondary</Button>\n          <Button color=\"info\">Info</Button>\n          <Button color=\"success\">Success</Button>\n          <Button color=\"warning\">Warning</Button>\n          <Button color=\"error\">Error</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading>Submit</LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />}>\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button color=\"info\">Medium</Button>\n          <Button color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { Grid, IconButton } from '@mui/material';\n// components\nimport { MIconButton } from '../../../../components/@material-extend';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function IconButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <IconButton color=\"inherit\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton>\n            <AlarmIcon />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton color=\"secondary\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton disabled>\n            <AlarmIcon />\n          </IconButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <MIconButton color=\"inherit\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton>\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"primary\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"secondary\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"success\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"warning\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"error\">\n            <AlarmIcon />\n          </MIconButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <MIconButton size=\"small\" color=\"info\">\n            <AlarmIcon fontSize=\"inherit\" />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon fontSize=\"small\" />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon fontSize=\"large\" />\n          </MIconButton>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport { ButtonGroup, Button, Grid } from '@mui/material';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function ButtonGroups() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <ButtonGroup color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup>\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled>\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <ButtonGroup size=\"small\" variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup size=\"large\" variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Orientation\" sx={style}>\n          <ButtonGroup orientation=\"vertical\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup orientation=\"vertical\" variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup orientation=\"vertical\" variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <ButtonGroup variant=\"contained\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState } from 'react';\n// material\nimport CheckIcon from '@mui/icons-material/Check';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport ViewQuiltIcon from '@mui/icons-material/ViewQuilt';\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = useState('left');\n  const [formats, setFormats] = useState(() => ['bold', 'italic']);\n  const [view, setView] = useState('list');\n  const [selected, setSelected] = useState(false);\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Exclusive selection\" sx={style}>\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\n            <ToggleButton value=\"left\">\n              <FormatAlignLeftIcon />\n            </ToggleButton>\n            <ToggleButton value=\"center\">\n              <FormatAlignCenterIcon />\n            </ToggleButton>\n            <ToggleButton value=\"right\">\n              <FormatAlignRightIcon />\n            </ToggleButton>\n            <ToggleButton value=\"justify\" disabled>\n              <FormatAlignJustifyIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Multiple selection\" sx={style}>\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\n            <ToggleButton value=\"bold\">\n              <FormatBoldIcon />\n            </ToggleButton>\n            <ToggleButton value=\"italic\">\n              <FormatItalicIcon />\n            </ToggleButton>\n            <ToggleButton value=\"underlined\">\n              <FormatUnderlinedIcon />\n            </ToggleButton>\n            <ToggleButton value=\"color\" disabled>\n              <FormatColorFillIcon />\n              <ArrowDropDownIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Exclusive selection\" sx={style}>\n          <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\n            <Grid item>\n              <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n\n            <Grid item>\n              <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n\n            <Grid item>\n              <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n          </Grid>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Vertical & Standalone buttons\" sx={style}>\n          <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange}>\n            <ToggleButton value=\"list\">\n              <ViewListIcon />\n            </ToggleButton>\n            <ToggleButton value=\"module\">\n              <ViewModuleIcon />\n            </ToggleButton>\n            <ToggleButton value=\"quilt\">\n              <ViewQuiltIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n          <ToggleButton\n            value=\"check\"\n            selected={selected}\n            onChange={() => {\n              setSelected(!selected);\n            }}\n          >\n            <CheckIcon />\n          </ToggleButton>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import AlarmIcon from '@mui/icons-material/Alarm';\n// material\nimport { Grid, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function OutlinedButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button variant=\"outlined\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"outlined\">Primary</Button>\n          <Button variant=\"outlined\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"outlined\" disabled>\n            Disabled\n          </Button>\n          <Button variant=\"outlined\">Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button variant=\"outlined\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"outlined\">Primary</Button>\n          <Button variant=\"outlined\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"outlined\" color=\"info\">\n            Info\n          </Button>\n          <Button variant=\"outlined\" color=\"success\">\n            Success\n          </Button>\n          <Button variant=\"outlined\" color=\"warning\">\n            Warning\n          </Button>\n          <Button variant=\"outlined\" color=\"error\">\n            Error\n          </Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button variant=\"outlined\" color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button variant=\"outlined\" color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading variant=\"outlined\">\n            Submit\n          </LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\" variant=\"outlined\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />} variant=\"outlined\">\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button variant=\"outlined\" color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button variant=\"outlined\" color=\"info\">\n            Medium\n          </Button>\n          <Button variant=\"outlined\" color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { Grid, Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function ContainedButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button variant=\"contained\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"contained\">Primary</Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"contained\" disabled>\n            Disabled\n          </Button>\n          <Button variant=\"contained\">Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button variant=\"contained\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"contained\">Primary</Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"contained\" color=\"info\">\n            Info\n          </Button>\n          <Button variant=\"contained\" color=\"success\">\n            Success\n          </Button>\n          <Button variant=\"contained\" color=\"warning\">\n            Warning\n          </Button>\n          <Button variant=\"contained\" color=\"error\">\n            Error\n          </Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button variant=\"contained\" color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button variant=\"contained\" color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading variant=\"contained\">\n            Submit\n          </LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\" variant=\"contained\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />} variant=\"contained\">\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button variant=\"contained\" color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button variant=\"contained\" color=\"info\">\n            Medium\n          </Button>\n          <Button variant=\"contained\" color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { Grid, Fab } from '@mui/material';\n// components\nimport { MFab } from '../../../../components/@material-extend';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function FloatingActionButton() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Fab color=\"default\">\n            <AlarmIcon />\n          </Fab>\n          <Fab>\n            <AlarmIcon />\n          </Fab>\n          <Fab color=\"secondary\">\n            <AlarmIcon />\n          </Fab>\n          <Fab disabled>\n            <AlarmIcon />\n          </Fab>\n          <Fab color=\"default\" variant=\"extended\">\n            <AlarmIcon />\n            Default\n          </Fab>\n          <Fab variant=\"extended\">\n            <AlarmIcon />\n            Primary\n          </Fab>\n          <Fab disabled variant=\"extended\">\n            <AlarmIcon />\n            Disabled\n          </Fab>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <MFab color=\"default\">\n            <AlarmIcon />\n          </MFab>\n          <MFab>\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"secondary\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"success\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"warning\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"error\">\n            <AlarmIcon />\n          </MFab>\n\n          <MFab variant=\"extended\" color=\"default\">\n            <AlarmIcon />\n            Default\n          </MFab>\n          <MFab variant=\"extended\">\n            <AlarmIcon />\n            Primary\n          </MFab>\n          <MFab variant=\"extended\" color=\"secondary\">\n            <AlarmIcon />\n            Secondary\n          </MFab>\n          <MFab variant=\"extended\" color=\"info\">\n            <AlarmIcon />\n            Info\n          </MFab>\n          <MFab variant=\"extended\" color=\"success\">\n            <AlarmIcon />\n            Success\n          </MFab>\n          <MFab variant=\"extended\" color=\"warning\">\n            <AlarmIcon />\n            Warning\n          </MFab>\n          <MFab variant=\"extended\" color=\"error\">\n            <AlarmIcon />\n            Error\n          </MFab>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <MFab color=\"info\" size=\"small\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\" size=\"medium\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\">\n            <AlarmIcon />\n          </MFab>\n\n          <MFab variant=\"extended\" size=\"small\" color=\"info\">\n            <AlarmIcon />\n            Small\n          </MFab>\n          <MFab variant=\"extended\" size=\"medium\" color=\"info\">\n            <AlarmIcon />\n            Medium\n          </MFab>\n          <MFab variant=\"extended\" color=\"info\">\n            <AlarmIcon />\n            Large\n          </MFab>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState } from 'react';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Container, Tab } from '@mui/material';\nimport { TabPanel, TabContext, TabList } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport TextButtons from './TextButtons';\nimport IconButtons from './IconButtons';\nimport ButtonGroups from './ButtonGroups';\nimport ToggleButtons from './ToggleButtons';\nimport OutlinedButtons from './OutlinedButtons';\nimport ContainedButtons from './ContainedButtons';\nimport FloatingActionButton from './FloatingActionButton';\n\n// ----------------------------------------------------------------------\n\nconst BUTTONS = [\n  { name: 'Contained Buttons', component: <ContainedButtons /> },\n  { name: 'Outlined Buttons', component: <OutlinedButtons /> },\n  { name: 'TextButtons', component: <TextButtons /> },\n  { name: 'Icon Buttons', component: <IconButtons /> },\n  { name: 'Floating Action Button', component: <FloatingActionButton /> },\n  { name: 'Button Groups', component: <ButtonGroups /> },\n  { name: 'Toggle Buttons', component: <ToggleButtons /> }\n];\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ButtonsComponent() {\n  const [value, setValue] = useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <RootStyle title=\"Components: Buttons | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"Buttons\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Buttons' }]}\n            moreLink={[\n              'https://mui.com/components/buttons',\n              'https://mui.com/components/button-group',\n              'https://mui.com/components/floating-action-button',\n              'https://mui.com/components/toggle-button'\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <TabContext value={value}>\n          <TabList onChange={handleChange}>\n            {BUTTONS.map((tab, index) => (\n              <Tab disableRipple key={tab.name} label={tab.name} value={String(index + 1)} />\n            ))}\n          </TabList>\n\n          {BUTTONS.map((tab, index) => (\n            <TabPanel key={tab.name} value={String(index + 1)} sx={{ mt: 5 }}>\n              {tab.component}\n            </TabPanel>\n          ))}\n        </TabContext>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}