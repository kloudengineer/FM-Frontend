{"version":3,"sources":["components/HeaderBreadcrumbs.js","utils/formatNumber.js","components/_dashboard/user/cards/UserCard.js","pages/dashboard/UserCards.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","SOCIALS","name","icon","facebookFill","width","height","color","instagramFilled","linkedinFill","twitterFill","CardMediaStyle","styled","theme","position","justifyContent","paddingTop","top","zIndex","content","backdropFilter","WebkitBackdropFilter","borderTopLeftRadius","shape","borderRadiusMd","borderTopRightRadius","backgroundColor","alpha","palette","primary","darker","CoverImgStyle","objectFit","InfoItem","Grid","item","xs","Typography","UserCard","user","cover","follower","totalPost","avatarUrl","following","Card","SvgIconStyle","src","bottom","Avatar","alt","transform","align","Box","textAlign","social","Tooltip","title","IconButton","Divider","container","py","SkeletonLoad","Array","_","index","sm","md","Skeleton","borderRadius","UserCards","themeStretch","useSettings","dispatch","useDispatch","users","useSelector","state","useEffect","getUsers","Page","Container","maxWidth","PATH_DASHBOARD","root","spacing","id","length"],"mappings":"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","file":"static/js/116.6e34c5d5.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Card, Grid, Avatar, Tooltip, Divider, Typography, IconButton } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../../../utils/formatNumber';\n//\nimport SvgIconStyle from '../../../SvgIconStyle';\n\n// ----------------------------------------------------------------------\n\nconst SOCIALS = [\n  {\n    name: 'Facebook',\n    icon: <Icon icon={facebookFill} width={20} height={20} color=\"#1877F2\" />\n  },\n  {\n    name: 'Instagram',\n    icon: <Icon icon={instagramFilled} width={20} height={20} color=\"#D7336D\" />\n  },\n  {\n    name: 'Linkedin',\n    icon: <Icon icon={linkedinFill} width={20} height={20} color=\"#006097\" />\n  },\n  {\n    name: 'Twitter',\n    icon: <Icon icon={twitterFill} width={20} height={20} color=\"#1C9CEA\" />\n  }\n];\n\nconst CardMediaStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'relative',\n  justifyContent: 'center',\n  paddingTop: 'calc(100% * 9 / 16)',\n  '&:before': {\n    top: 0,\n    zIndex: 9,\n    content: \"''\",\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backdropFilter: 'blur(3px)',\n    WebkitBackdropFilter: 'blur(3px)', // Fix on Mobile\n    borderTopLeftRadius: theme.shape.borderRadiusMd,\n    borderTopRightRadius: theme.shape.borderRadiusMd,\n    backgroundColor: alpha(theme.palette.primary.darker, 0.72)\n  }\n}));\n\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  zIndex: 8,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\n// ----------------------------------------------------------------------\n\nfunction InfoItem(number) {\n  return (\n    <Grid item xs={4}>\n      <Typography variant=\"caption\" sx={{ mb: 0.5, color: 'text.secondary', display: 'block' }}>\n        Follower\n      </Typography>\n      <Typography variant=\"subtitle1\">{fShortenNumber(number)}</Typography>\n    </Grid>\n  );\n}\n\nUserCard.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default function UserCard({ user, ...other }) {\n  const { name, cover, position, follower, totalPost, avatarUrl, following } = user;\n\n  return (\n    <Card {...other}>\n      <CardMediaStyle>\n        <SvgIconStyle\n          color=\"paper\"\n          src=\"/static/icons/shape-avatar.svg\"\n          sx={{\n            width: 144,\n            height: 62,\n            zIndex: 10,\n            bottom: -26,\n            position: 'absolute'\n          }}\n        />\n        <Avatar\n          alt={name}\n          src={avatarUrl}\n          sx={{\n            width: 64,\n            height: 64,\n            zIndex: 11,\n            position: 'absolute',\n            transform: 'translateY(-50%)'\n          }}\n        />\n        <CoverImgStyle alt=\"cover\" src={cover} />\n      </CardMediaStyle>\n\n      <Typography variant=\"subtitle1\" align=\"center\" sx={{ mt: 6 }}>\n        {name}\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\n        {position}\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', mt: 2, mb: 2.5 }}>\n        {SOCIALS.map((social) => (\n          <Tooltip key={social.name} title={social.name}>\n            <IconButton>{social.icon}</IconButton>\n          </Tooltip>\n        ))}\n      </Box>\n\n      <Divider />\n\n      <Grid container sx={{ py: 3, textAlign: 'center' }}>\n        {InfoItem(follower)}\n        {InfoItem(following)}\n        {InfoItem(totalPost)}\n      </Grid>\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Container, Grid, Skeleton } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUsers } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport { UserCard } from '../../components/_dashboard/user/cards';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst SkeletonLoad = (\n  <>\n    {[...Array(8)].map((_, index) => (\n      <Grid item xs={12} sm={6} md={4} key={index}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '115%', borderRadius: 2 }} />\n      </Grid>\n    ))}\n  </>\n);\n\nexport default function UserCards() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { users } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"User: Cards | Minimal-UI\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User Cards\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: 'Cards' }\n          ]}\n        />\n        <Grid container spacing={3}>\n          {users.map((user) => (\n            <Grid key={user.id} item xs={12} sm={6} md={4}>\n              <UserCard user={user} />\n            </Grid>\n          ))}\n\n          {!users.length && SkeletonLoad}\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}