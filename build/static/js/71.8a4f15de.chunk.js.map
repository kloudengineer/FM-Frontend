{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","components/_dashboard/chat/ChatAccount.js","components/_dashboard/chat/ChatContactSearch.js","components/_dashboard/chat/ChatConversationItem.js","components/_dashboard/chat/ChatConversationList.js","components/_dashboard/chat/ChatHeaderCompose.js","components/_dashboard/chat/ChatHeaderDetail.js","components/_dashboard/chat/ChatMessageInput.js","components/_dashboard/chat/ChatMessageItem.js","components/_dashboard/chat/ChatMessageList.js","components/_dashboard/chat/ChatRoomAttachment.js","components/_dashboard/chat/ChatRoomOneParticipant.js","components/_dashboard/chat/ChatRoomPopup.js","components/_dashboard/chat/ChatRoomGroupParticipant.js","components/_dashboard/chat/ChatRoom.js","components/_dashboard/chat/ChatSearchResults.js","components/_dashboard/chat/ChatSidebar.js","components/_dashboard/chat/ChatWindow.js","pages/dashboard/Chat.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","SearchNotFound","searchQuery","align","LightboxModalStyles","theme","useTheme","isRTL","direction","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","alpha","palette","grey","backgroundImage","styles","backdropFilter","height","padding","spacing","width","justifyContent","marginLeft","borderRadius","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","useEffect","document","body","style","overflow","toolbarButtons","length","animationDuration","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","RootStyle","styled","position","PickerStyle","bottom","boxShadow","customShadows","z20","borderRadiusMd","border","background","paper","color","text","disabled","primary","borderColor","divider","typography","body2","opacity","fill","subtitle2","WebkitBackdropFilter","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","e","preventDefault","icon","smilingFaceFill","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getIcon","name","component","src","alt","getFileThumb","thumb","format","includes","getFileFormat","Icon","fileFill","STATUS","ChatAccount","user","useAuth","anchorRef","useRef","open","setOpen","status","setStatus","Box","ref","MyAvatar","cursor","BadgeStatus","Popover","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","ml","mr","Typography","displayName","email","Tooltip","IconButton","roundPowerSettingsNew","Divider","List","ListItem","px","ListItemIcon","m","ListItemText","Select","onChange","event","p","option","capitalCase","ListItemButton","roundAccountBox","primaryTypographyProps","settings2Fill","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","borderWidth","ChatContactSearch","query","onFocus","ClickAwayListener","FormControl","fullWidth","placeholder","startAdornment","InputAdornment","searchFill","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","isOpenSidebar","onSelectConversation","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","bgcolor","ListItemAvatar","top","slice","className","Avatar","avatar","secondaryTypographyProps","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","Date","addSuffix","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","disablePadding","allIds","conversationId","byId","conversationKey","type","find","username","PATH_DASHBOARD","chat","root","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipients","setQuery","Autocomplete","multiple","disablePortal","popupIcon","clearText","noOptionsText","recipient","onInputChange","options","getOptionLabel","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","Chip","key","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","fToNow","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","fileInputRef","setMessage","handleAttach","click","handleSend","messageId","uuidv4","attachments","Input","disableUnderline","onKeyUp","endAdornment","Stack","roundAddPhotoAlternate","attach2Fill","micFill","orientation","flexItem","mx","roundSend","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","objectFit","breakpoints","up","ChatMessageItem","onOpenLightbox","senderDetails","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","paddingBottom","FileItemStyle","FileThumbStyle","CollapseButtonStyle","Button","overline","AttachmentItem","file","fDateTime","ChatRoomAttachment","isCollapse","onCollapse","totalAttachment","uniq","flatten","endIcon","arrowIosDownwardFill","Collapse","in","RowIconStyle","RowTextStyle","wordWrap","ChatRoomOneParticipant","pt","pb","textAlign","pinFill","address","phone","emailFill","RowStyle","IconStyle","marginRight","ChatRoomPopup","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","DRAWER_WIDTH","ToggleButtonStyle","borderRight","ChatRoom","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isMobile","useMediaQuery","down","handleCloseSidebar","handleOpenSidebar","renderContent","participantId","prev","arrowIosBackFill","Drawer","anchor","ModalProps","keepMounted","ChatSearchResults","results","onSelectContact","isFound","result","contrastText","darker","ChatSidebar","pathname","useLocation","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","useSelector","state","displayResults","handleToggleSidebar","handleChangeSearch","a","axios","get","response","data","console","error","handleSearchSelect","to","new","RouterLink","editFill","peopleFill","transform","visibility","ChatWindow","dispatch","useDispatch","useParams","conversationSelector","mode","displayParticipants","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","Chat","themeStretch","useSettings","getConversations","getContacts","Page","Container","Card"],"mappings":"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","file":"static/js/71.8a4f15de.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// material\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const backgroundIcon = (iconName) => ({\n    backgroundSize: '24px 24px',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backdropFilter: 'blur(8px)',\n            backgroundColor: alpha(theme.palette.grey[900], 0.88)\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent'\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            '& li:first-of-type': {\n              flexGrow: 1\n            },\n            '& li:not(:first-of-type)': {\n              width: theme.spacing(5),\n              height: theme.spacing(5),\n              justifyContent: 'center',\n              marginLeft: theme.spacing(1),\n              borderRadius: theme.shape.borderRadius\n            }\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\n            '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\n            '&.ril__closeButton': backgroundIcon('close')\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            borderRadius: theme.shape.borderRadiusSm,\n            '&.ril__navButtonPrev': {\n              left: theme.spacing(2),\n              right: 'auto',\n              ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\n            },\n            '&.ril__navButtonNext': {\n              right: theme.spacing(2),\n              left: 'auto',\n              ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\n            }\n          }\n        }\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n  const customStyles = {\n    overlay: {\n      zIndex: 9999\n    }\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={120}\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={onClose}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","import 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { IconButton, ClickAwayListener } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  position: 'relative'\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: theme.shape.borderRadiusMd,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary\n    }\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled\n    }\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    backdropFilter: 'blur(8px)',\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n    color: theme.palette.text.primary,\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool\n};\n\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji) => setValue(value + emoji.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (e) => {\n    e.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important'\n            })\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Icon icon={smilingFaceFill} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","// material\nimport { Box } from '@mui/material';\n//\nimport { Icon } from '@iconify/react';\nimport fileFill from '@iconify/icons-eva/file-fill';\n\n// ----------------------------------------------------------------------\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl) {\n  return fileUrl.split('.').pop();\n}\n\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = (name) => (\n  <Box component=\"img\" src={`/static/icons/file/${name}.svg`} alt={name} sx={{ width: 28, height: 28 }} />\n);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'image':\n      thumb = <Box component=\"img\" src={fileUrl} alt={fileUrl} sx={{ width: 1, height: 1 }} />;\n      break;\n    case 'video':\n      thumb = getIcon('file_type_video');\n      break;\n    case 'word':\n      thumb = getIcon('file_type_word');\n      break;\n    case 'excel':\n      thumb = getIcon('file_type_excel');\n      break;\n    case 'powerpoint':\n      thumb = getIcon('file_type_powerpoint');\n      break;\n    case 'pdf':\n      thumb = getIcon('file_type_pdf');\n      break;\n    case 'photoshop':\n      thumb = getIcon('file_type_photoshop');\n      break;\n    case 'illustrator':\n      thumb = getIcon('file_type_ai');\n      break;\n    default:\n      thumb = <Box component={Icon} icon={fileFill} sx={{ width: 28, height: 28 }} />;\n  }\n  return thumb;\n}\n","import { Icon } from '@iconify/react';\nimport { useState, useRef } from 'react';\nimport { capitalCase } from 'change-case';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\nimport roundPowerSettingsNew from '@iconify/icons-ic/round-power-settings-new';\n// material\nimport {\n  Box,\n  List,\n  Select,\n  Divider,\n  Popover,\n  Tooltip,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  ListItemButton\n} from '@mui/material';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n//\nimport MyAvatar from '../../MyAvatar';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [status, setStatus] = useState('online');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  return (\n    <>\n      <Box ref={anchorRef} sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <Popover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n      >\n        <Box sx={{ py: 2, pr: 1, pl: 2.5, display: 'flex', alignItems: 'center' }}>\n          <MyAvatar />\n\n          <Box sx={{ ml: 2, mr: 3 }}>\n            <Typography noWrap variant=\"subtitle1\">\n              {user.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user.email}\n            </Typography>\n          </Box>\n\n          <Tooltip title=\"Log out\">\n            <IconButton>\n              <Icon icon={roundPowerSettingsNew} width={24} height={24} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        <Divider />\n\n        <List>\n          <ListItem sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <BadgeStatus size=\"large\" status={status} sx={{ m: 0.75 }} />\n            </ListItemIcon>\n            <ListItemText>\n              <Select\n                native\n                value={status}\n                onChange={handleChangeStatus}\n                sx={{\n                  '& svg': { display: `none` },\n                  '& select': { p: 0, typography: 'body2' },\n                  '& fieldset': { display: 'none' }\n                }}\n              >\n                {STATUS.map((option) => (\n                  <option key={option} value={option}>\n                    {capitalCase(option)}\n                  </option>\n                ))}\n              </Select>\n            </ListItemText>\n          </ListItem>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={roundAccountBox} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={settings2Fill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  marginTop: theme.spacing(2)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  transition: theme.transitions.create('box-shadow', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatContactSearch.propTypes = {\n  query: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClickAway: PropTypes.func\n};\n\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <RootStyle {...other}>\n        <FormControl fullWidth size=\"small\">\n          <SearchStyle\n            value={query}\n            onFocus={onFocus}\n            onChange={onChange}\n            placeholder=\"Search contacts...\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { last } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all')\n}));\n\nconst AvatarWrapperStyle = styled('div')({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\n});\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\nChatConversationItem.propTypes = {\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  isOpenSidebar: PropTypes.bool,\n  onSelectConversation: PropTypes.func\n};\n\nexport default function ChatConversationItem({ isSelected, conversation, isOpenSidebar, onSelectConversation }) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages).createdAt;\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' })\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\n                  }\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 }\n              }\n            })\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && (\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2'\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary'\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column'\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled'\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { List } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      conversationKey = otherParticipant.username;\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  return (\n    <List disablePadding {...other}>\n      {conversations.allIds.map((conversationId) => (\n        <ChatConversationItem\n          key={conversationId}\n          isOpenSidebar={isOpenSidebar}\n          conversation={conversations.byId[conversationId]}\n          isSelected={activeConversationId === conversationId}\n          onSelectConversation={() => handleSelectConversation(conversationId)}\n        />\n      ))}\n    </List>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@mui/material';\n//\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3)\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8\n    }\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`\n    }\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipients: PropTypes.func\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipients, ...other }) {\n  const [query, setQuery] = useState('');\n\n  const handleChangeQuery = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleAddRecipients = (event, recipient) => {\n    setQuery('');\n    onAddRecipients(recipient);\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          clearText={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={handleAddRecipients}\n          onInputChange={handleChangeQuery}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <li {...props}>\n                <Box\n                  sx={{\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative'\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main'\n                      })\n                    }}\n                  >\n                    <Icon icon={checkmarkFill} width={20} height={20} />\n                  </Box>\n                </Box>\n                <Box sx={{ ml: 2 }} />\n                {parts.map((part, index) => (\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\n                    {part.text}\n                  </Typography>\n                ))}\n              </li>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { id, name, avatar } = recipient;\n              return (\n                <Chip\n                  {...getTagProps({ index })}\n                  key={id}\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                />\n              );\n            })\n          }\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport videoFill from '@iconify/icons-eva/video-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n//\nimport { MIconButton } from '../../@material-extend';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3)\n}));\n\n// ----------------------------------------------------------------------\n\nOneAvatar.propTypes = {\n  participants: PropTypes.array\n};\n\nfunction OneAvatar({ participants }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity)}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nGroupAvatar.propTypes = {\n  participants: PropTypes.array\n};\n\nfunction GroupAvatar({ participants }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 }\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Icon icon={arrowIosForwardFill} />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array\n};\n\nexport default function ChatHeaderDetail({ participants, ...other }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle {...other}>\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <MIconButton>\n        <Icon icon={phoneFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={videoFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </MIconButton>\n    </RootStyle>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport micFill from '@iconify/icons-eva/mic-fill';\nimport roundSend from '@iconify/icons-ic/round-send';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@mui/material';\n//\nimport EmojiPicker from '../../EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2)\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  onSend: PropTypes.func\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend, ...other }) {\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChangeMessage = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend) {\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0'\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={0.5} mr={1.5}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={attach2Fill} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Icon icon={micFill} width={24} height={24} />\n            </IconButton>\n          </Stack>\n        }\n        sx={{ height: '100%' }}\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Icon icon={roundSend} width={24} height={24} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary\n}));\n\nconst MessageImgStyle = styled('img')(({ theme }) => ({\n  width: '100%',\n  cursor: 'pointer',\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadius,\n  [theme.breakpoints.up('md')]: {\n    height: 200,\n    minWidth: 296\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }) {\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender?.avatar, name: sender?.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto'\n          })\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32, mr: 2 }} />\n        )}\n\n        <div>\n          <InfoStyle variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && { color: 'grey.800', bgcolor: 'primary.lighter' }),\n              ...(isImage && { p: 0 })\n            }}\n          >\n            {isImage ? (\n              <MessageImgStyle alt=\"attachment\" src={message.body} onClick={() => onOpenLightbox(message.body)} />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </div>\n      </Box>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../Scrollbar';\nimport LightboxModal from '../../LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef();\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const images = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(images, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, height: 1 }}>\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={handleOpenLightbox}\n          />\n        ))}\n      </Scrollbar>\n\n      <LightboxModal\n        images={images}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onClose={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { uniq, flatten } from 'lodash';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n//\nimport Scrollbar from '../../Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2)\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5)\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16]\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  file: PropTypes.object,\n  fileUrl: PropTypes.string\n};\n\nfunction AttachmentItem({ file, fileUrl }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n\nChatRoomAttachment.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse, ...other }) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\n\n  return (\n    <RootStyle {...other}>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  color: theme.palette.text.secondary\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...theme.typography.body2\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomOneParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse, ...other }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <Box {...other}>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Stack spacing={2} sx={{ p: 2.5, pt: 1 }}>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={pinFill} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </Stack>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={phoneFill} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </Stack>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={emailFill} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </Stack>\n        </Stack>\n      </Collapse>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Typography, DialogContent } from '@mui/material';\n//\nimport { DialogAnimate } from '../../animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5)\n}));\n\nconst IconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomPopup.propTypes = {\n  participant: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose, ...other }) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose} {...other}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <IconStyle icon={pinFill} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={phoneFill} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={emailFill} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport Scrollbar from '../../Scrollbar';\nimport BadgeStatus from '../../BadgeStatus';\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  participant: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool,\n  onClosePopup: PropTypes.func,\n  onShowPopup: PropTypes.func\n};\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n\nChatRoomGroupParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  selectUserId: PropTypes.string,\n  onShowPopupUserInfo: PropTypes.func,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse\n}) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse} sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton, useMediaQuery } from '@mui/material';\n// components\nimport { MHidden } from '../../@material-extend';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 240;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired\n};\n\nexport default function ChatRoom({ conversation, participants }) {\n  const theme = useTheme();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (isMobile) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isMobile]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <ToggleButtonStyle\n        onClick={handleToggleSidebar}\n        sx={{\n          ...(openSidebar && !isMobile && { right: DRAWER_WIDTH })\n        }}\n      >\n        <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\n      </ToggleButtonStyle>\n\n      <MHidden width=\"lgUp\">\n        <Drawer\n          anchor=\"right\"\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': {\n              width: DRAWER_WIDTH\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open={openSidebar}\n          anchor=\"right\"\n          variant=\"persistent\"\n          sx={{\n            height: 1,\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openSidebar && { width: '0px' }),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nChatSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onSelectContact: PropTypes.func\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2'\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral'\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, Link as RouterLink, useLocation } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport peopleFill from '@iconify/icons-eva/people-fill';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, useMediaQuery, Stack, Drawer, IconButton } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { MIconButton, MHidden } from '../../@material-extend';\nimport Scrollbar from '../../Scrollbar';\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 320;\nconst COLLAPSE_WIDTH = 96;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(13),\n  borderRadius: `0 12px 12px 0`,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  boxShadow: theme.customShadows.primary,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.darker\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\n\n  const displayResults = searchQuery && isSearchFocused;\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const isCollapse = !isMobile && !openSidebar;\n\n  useEffect(() => {\n    if (isMobile) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isMobile, pathname]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value }\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <MIconButton onClick={handleToggleSidebar}>\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\n          </MIconButton>\n\n          {!isCollapse && (\n            <MIconButton\n              // @ts-ignore\n              to={PATH_DASHBOARD.chat.new}\n              component={RouterLink}\n            >\n              <Icon icon={editFill} width={20} height={20} />\n            </MIconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      <MHidden width=\"mdUp\">\n        <ToggleButtonStyle onClick={handleToggleSidebar}>\n          <Icon width={16} height={16} icon={peopleFill} />\n        </ToggleButtonStyle>\n      </MHidden>\n\n      {/* Mobile */}\n      <MHidden width=\"mdUp\">\n        <Drawer\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      {/* Desktop */}\n      <MHidden width=\"mdDown\">\n        <Drawer\n          open={openSidebar}\n          variant=\"persistent\"\n          sx={{\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH\n            },\n            ...(isCollapse && {\n              width: COLLAPSE_WIDTH,\n              '& .MuiDrawer-paper': {\n                width: COLLAPSE_WIDTH,\n                position: 'static',\n                transform: 'none !important',\n                visibility: 'visible !important'\n              }\n            })\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// material\nimport { Box, Divider, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state) => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = activeConversationId ? conversations.byId[activeConversationId] : null;\n  if (conversation) {\n    return conversation;\n  }\n  const initState = {\n    id: '',\n    messages: [],\n    participants: [],\n    unreadCount: 0,\n    type: ''\n  };\n  return initState;\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\n  const conversation = useSelector((state) => conversationSelector(state));\n\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        await dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (recipients) => {\n    dispatch(addRecipients(recipients));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Stack sx={{ flexGrow: 1, minWidth: '1px' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipients={handleAddRecipients}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Stack sx={{ flexGrow: 1 }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Stack>\n\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\n      </Box>\n    </Stack>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Card, Container } from '@mui/material';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../components/_dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat | Minimal-UI\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}